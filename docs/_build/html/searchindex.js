Search.setIndex({"docnames": ["autoapi/index", "autoapi/mrcnn/config/index", "autoapi/mrcnn/index", "autoapi/mrcnn/model/index", "autoapi/mrcnn/parallel_model/index", "autoapi/mrcnn/utils/index", "autoapi/mrcnn/visualize/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/mrcnn/config/index.rst", "autoapi/mrcnn/index.rst", "autoapi/mrcnn/model/index.rst", "autoapi/mrcnn/parallel_model/index.rst", "autoapi/mrcnn/utils/index.rst", "autoapi/mrcnn/visualize/index.rst", "index.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mrcnn.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mrcnn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mrcnn.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mrcnn.parallel_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mrcnn.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mrcnn.visualize</span></code>", "Introduction"], "terms": {"thi": [0, 1, 3, 5, 7], "page": [0, 7], "contain": [0, 3, 5, 6, 7], "auto": 0, "gener": [0, 3, 5, 6], "document": 0, "1": [0, 1, 3, 5, 6, 7], "mrcnn": [0, 7], "config": [0, 2, 3, 5, 7], "model": [0, 2, 4, 6], "parallel_model": [0, 2], "util": [0, 2, 3, 4], "visual": [0, 2, 3, 7], "creat": [0, 1, 3, 4, 5, 7], "sphinx": 0, "autoapi": 0, "mask": [1, 3, 4, 5, 6, 7], "r": [1, 3, 4, 5, 6], "cnn": [1, 3, 4, 5, 6], "base": [1, 3, 4, 5], "configur": [1, 7], "copyright": [1, 3, 4, 5, 6], "c": [1, 3, 4, 5, 6], "2017": [1, 3, 4, 5, 6], "matterport": [1, 3, 4, 5, 6], "inc": [1, 3, 4, 5, 6], "licens": [1, 3, 4, 5, 6], "under": [1, 3, 4, 5, 6, 7], "mit": [1, 3, 4, 5, 6], "see": [1, 3, 4, 5, 6], "detail": [1, 3, 4, 5, 6], "written": [1, 3, 4, 5, 6], "wale": [1, 3, 4, 5, 6], "abdulla": [1, 3, 4, 5, 6], "object": [1, 3, 5, 6, 7], "For": [1, 3, 5, 6], "custom": [1, 3, 6, 7], "sub": [1, 3], "inherit": [1, 3], "from": [1, 3, 4, 5, 7], "one": [1, 3, 5, 7], "overrid": [1, 4, 5], "properti": [1, 3, 5], "need": [1, 3, 5, 7], "chang": [1, 3, 5, 7], "name": [1, 3, 5, 6, 7], "gpu_count": [1, 4, 7], "images_per_gpu": [1, 7], "2": [1, 3, 4, 5, 6, 7], "steps_per_epoch": 1, "1000": 1, "validation_step": 1, "10": [1, 6], "backbon": [1, 3], "resnet101": [1, 3], "compute_backbone_shap": [1, 3], "backbone_strid": 1, "4": [1, 3, 5, 6], "8": [1, 5], "16": [1, 6], "32": [1, 5], "64": [1, 5], "fpn_classif_fc_layers_s": 1, "1024": [1, 3], "top_down_pyramid_s": 1, "256": 1, "num_class": [1, 3, 7], "rpn_anchor_scal": 1, "128": [1, 5], "512": 1, "rpn_anchor_ratio": 1, "0": [1, 3, 5, 6, 7], "5": [1, 3, 5, 6], "rpn_anchor_strid": 1, "rpn_nms_threshold": 1, "7": [1, 3, 7], "rpn_train_anchors_per_imag": 1, "pre_nms_limit": 1, "6000": 1, "post_nms_rois_train": [1, 3], "2000": 1, "post_nms_rois_infer": 1, "use_mini_mask": [1, 3], "fals": [1, 3, 5, 7], "mini_mask_shap": [1, 3], "56": 1, "image_resize_mod": 1, "squar": [1, 3, 5], "image_min_dim": 1, "image_max_dim": 1, "image_min_scal": 1, "image_channel_count": 1, "3": [1, 3, 5, 6, 7], "mean_pixel": 1, "train_rois_per_imag": [1, 3], "200": 1, "roi_positive_ratio": 1, "33": 1, "pool_siz": [1, 3], "mask_pool_s": [1, 3], "14": 1, "mask_shap": 1, "28": 1, "max_gt_inst": [1, 3, 7], "100": [1, 7], "rpn_bbox_std_dev": 1, "bbox_std_dev": 1, "detection_max_inst": [1, 7], "35": [1, 7], "detection_min_confid": [1, 7], "detection_nms_threshold": [1, 7], "learning_r": [1, 3, 7], "001": [1, 7], "learning_momentum": 1, "9": [1, 5, 7], "weight_decai": 1, "0001": 1, "loss_weight": 1, "use_rpn_roi": 1, "true": [1, 3, 5, 6, 7], "train_bn": [1, 3], "gradient_clip_norm": 1, "to_dict": 1, "displai": [1, 4, 6, 7], "valu": [1, 3, 5, 6, 7], "The": [3, 5, 6, 7], "main": [3, 7], "implement": 3, "log": [3, 5, 7], "text": [3, 5], "arrai": [3, 5, 6], "none": [3, 5, 6], "print": [3, 5], "messag": 3, "And": [3, 5], "option": [3, 6, 7], "numpi": [3, 5], "i": [3, 5, 6, 7], "provid": [3, 5], "": [3, 4, 5], "shape": [3, 5], "min": 3, "max": 3, "batchnorm": 3, "tensorflow": [3, 4], "kera": [3, 4], "layer": [3, 7], "extend": 3, "allow": [3, 5], "central": [3, 5], "place": [3, 4, 5, 7], "make": [3, 5], "batch": [3, 5], "normal": [3, 5, 6], "ha": [3, 5, 7], "neg": 3, "effect": 3, "train": [3, 4, 5, 7], "ar": [3, 4, 5, 6, 7], "small": [3, 4, 5], "so": [3, 5], "often": 3, "frozen": 3, "via": 3, "set": [3, 5, 6, 7], "linear": 3, "call": [3, 5], "input": [3, 4, 5], "note": [3, 5], "about": [3, 5, 6], "bn": 3, "mode": [3, 5], "freez": 3, "good": 3, "when": [3, 5, 7], "size": [3, 5, 6, 7], "don": 3, "t": [3, 5], "us": [3, 5, 6, 7], "even": [3, 5], "infer": [3, 7], "image_shap": [3, 5], "comput": [3, 5], "width": [3, 5, 6], "height": [3, 5, 6], "each": [3, 4, 5, 6, 7], "stage": 3, "network": [3, 5], "return": [3, 5, 6], "n": [3, 5, 6], "where": [3, 4, 5, 7], "number": [3, 5, 6, 7], "identity_block": 3, "input_tensor": 3, "kernel_s": 3, "filter": [3, 5], "block": 3, "use_bia": 3, "conv": 3, "shortcut": 3, "argument": 3, "tensor": [3, 5, 6], "default": [3, 5, 7], "kernel": 3, "middl": 3, "path": [3, 5, 7], "list": [3, 5, 6], "integ": 3, "nb_filter": 3, "current": 3, "label": [3, 7], "b": [3, 5], "boolean": 3, "To": [3, 5, 6], "bia": 3, "norm": [3, 6], "conv_block": 3, "stride": [3, 5], "first": [3, 5, 7], "subsampl": 3, "should": [3, 5, 6, 7], "have": [3, 5], "well": 3, "resnet_graph": 3, "input_imag": 3, "architectur": 3, "stage5": 3, "build": 3, "resnet": 3, "graph": [3, 5], "can": [3, 5, 7], "resnet50": 3, "If": [3, 5, 7], "apply_box_deltas_graph": 3, "box": [3, 5, 6], "delta": [3, 5], "appli": [3, 4, 5, 6], "given": [3, 5, 6], "y1": [3, 5, 6], "x1": [3, 5, 6], "y2": [3, 5, 6], "x2": [3, 5, 6], "updat": 3, "dy": [3, 5], "dx": [3, 5], "dh": [3, 5], "dw": [3, 5], "refin": [3, 5, 6, 7], "clip_boxes_graph": 3, "window": [3, 5, 7], "form": [3, 5], "proposallay": 3, "proposal_count": 3, "nms_threshold": 3, "kwarg": [3, 4, 5], "receiv": [3, 5], "anchor": [3, 5, 6], "score": [3, 5, 6], "select": [3, 7], "subset": 3, "pass": [3, 5], "propos": [3, 6], "second": [3, 5, 7], "done": [3, 5], "non": [3, 5, 7], "suppress": [3, 5, 7], "remov": [3, 5], "overlap": [3, 5, 6], "It": [3, 4, 5], "also": 3, "bound": [3, 5, 6], "rpn_prob": 3, "num_anchor": 3, "bg": 3, "prob": 3, "fg": 3, "rpn_bbox": 3, "coordin": [3, 5, 6], "roi": [3, 6, 7], "get_config": 3, "compute_output_shap": 3, "input_shap": 3, "log2_graph": 3, "x": [3, 5], "log2": 3, "tf": [3, 5], "doesn": [3, 5], "nativ": 3, "pyramidroialign": 3, "pool_shap": 3, "pool": 3, "multipl": [3, 4, 5], "level": [3, 5, 7], "featur": [3, 5], "pyramid": [3, 5], "param": [3, 5], "pool_height": 3, "pool_width": 3, "output": [3, 4], "region": 3, "usual": [3, 7], "num_box": 3, "possibli": 3, "pad": [3, 5], "zero": [3, 5], "enough": 3, "fill": [3, 5], "image_meta": 3, "meta": 3, "data": [3, 5], "imag": [3, 5, 6, 7], "compose_image_meta": 3, "feature_map": 3, "map": [3, 5, 6], "differ": [3, 4, 5, 6], "channel": [3, 7], "those": 3, "specif": [3, 5], "constructor": 3, "overlaps_graph": 3, "boxes1": [3, 5], "boxes2": [3, 5], "iou": [3, 5, 6, 7], "between": [3, 5, 7], "two": [3, 5], "detection_targets_graph": 3, "gt_class_id": [3, 5, 6], "gt_box": [3, 5, 6], "gt_mask": [3, 5, 6], "detect": [3, 7], "target": 3, "id": [3, 5, 6], "might": [3, 5], "int": [3, 5, 6], "type": [3, 5, 7], "correspond": [3, 5], "shift": 3, "class_id": [3, 5, 6], "crop": [3, 5, 7], "bbox": [3, 5], "boundari": 3, "resiz": [3, 5], "neural": [3, 5], "detectiontargetlay": 3, "target_class_id": 3, "target_delta": 3, "target_mask": 3, "compute_mask": 3, "refine_detections_graph": 3, "classifi": [3, 6, 7], "final": [3, 7], "probabl": [3, 6], "part": [3, 5, 7], "exclud": [3, 5], "num_detect": 3, "detectionlay": 3, "take": [3, 5, 7], "class_scor": 3, "rpn_graph": 3, "anchors_per_loc": 3, "anchor_strid": [3, 5], "depth": 3, "per": [3, 5, 6, 7], "pixel": [3, 5, 6], "control": [3, 5], "densiti": 3, "typic": [3, 5], "everi": [3, 5], "other": [3, 5, 7], "rpn_class_logit": 3, "h": [3, 5], "w": [3, 5], "logit": 3, "befor": [3, 5, 7], "softmax": 3, "build_rpn_model": 3, "wrap": 3, "rpn": 3, "time": 3, "share": 3, "weight": [3, 4, 5, 6, 7], "fpn_classifier_graph": 3, "fc_layers_s": 3, "regressor": 3, "head": [3, 7], "num_roi": 3, "p2": 3, "p3": 3, "p4": 3, "p5": 3, "resolut": 3, "which": [3, 5, 7], "determin": [3, 6], "result": [3, 5, 6, 7], "fc": 3, "bbox_delta": 3, "build_fpn_mask_graph": 3, "smooth_l1_loss": 3, "y_true": 3, "y_pred": 3, "smooth": [3, 5], "l1": 3, "loss": [3, 4], "could": 3, "ani": 3, "rpn_class_loss_graph": 3, "rpn_match": 3, "match": [3, 5, 7], "posit": 3, "neutral": 3, "rpn_bbox_loss_graph": 3, "target_bbox": 3, "uns": 3, "mrcnn_class_loss_graph": 3, "pred_class_logit": 3, "active_class_id": 3, "rcnn": 3, "dataset": [3, 5, 6, 7], "mrcnn_bbox_loss_graph": 3, "pred_bbox": [3, 5], "mrcnn_mask_loss_graph": 3, "pred_mask": [3, 5, 6], "binari": [3, 5, 7], "cross": 3, "entropi": 3, "A": [3, 5, 6, 7], "float32": 3, "load_image_gt": 3, "image_id": [3, 5], "augment": 3, "load": [3, 4, 5], "ground": [3, 5, 6, 7], "truth": [3, 5, 6, 7], "an": [3, 5, 6, 7], "imgaug": 3, "http": [3, 4, 5, 7], "github": [3, 4, 5, 7], "com": [3, 4, 5, 7], "aleju": 3, "exampl": [3, 5, 6, 7], "fliplr": 3, "flip": 3, "right": [3, 5], "left": [3, 5], "50": [3, 7], "origin": [3, 4, 5, 7], "instance_count": 3, "unless": 3, "case": 3, "thei": [3, 6], "defin": [3, 5], "build_detection_target": 3, "rpn_roi": 3, "debug": [3, 5], "without": [3, 5], "instanc": [3, 5, 6, 7], "count": [3, 5], "full": [3, 5], "mini": [3, 5], "y": [3, 5], "build_rpn_target": 3, "gt": [3, 5, 6], "identifi": 3, "them": [3, 5, 6], "num_gt_box": 3, "int32": 3, "generate_random_roi": 3, "similar": [3, 5], "what": 3, "would": 3, "datagener": 3, "shuffl": 3, "random_roi": 3, "detection_target": 3, "sequenc": 3, "iter": [3, 6], "avoid": [3, 5], "redund": 3, "multiprocess": 3, "pick": [3, 5], "sampl": 3, "epoch": [3, 7], "becaus": 3, "trainig": 3, "python": 3, "upon": 3, "__getitem__": 3, "depend": [3, 5], "empti": 3, "regular": 3, "But": [3, 5], "__len__": 3, "idx": 3, "maskrcnn": 3, "model_dir": 3, "encapsul": 3, "actual": [3, 5], "keras_model": [3, 4], "either": [3, 5], "accordingli": 3, "find_last": 3, "find": [3, 5, 7], "last": [3, 5], "checkpoint": 3, "file": [3, 7], "directori": [3, 7], "load_weight": 3, "filepath": 3, "by_nam": 3, "modifi": [3, 7], "version": [3, 5], "addit": 3, "multi": [3, 4], "gpu": [3, 4, 7], "support": [3, 4, 5], "abil": 3, "some": 3, "get_imagenet_weight": 3, "download": [3, 5, 7], "imagenet": 3, "compil": 3, "momentum": 3, "get": [3, 5, 6, 7], "readi": 3, "add": [3, 4, 5, 7], "metric": 3, "Then": [3, 4, 7], "set_train": 3, "layer_regex": 3, "indent": 3, "verbos": [3, 5], "trainabl": 3, "express": 3, "set_log_dir": 3, "model_path": 3, "counter": 3, "format": [3, 5, 6, 7], "code": [3, 4], "new": [3, 4, 5, 7], "start": [3, 7], "otherwis": 3, "extract": 3, "train_dataset": 3, "val_dataset": 3, "custom_callback": 3, "no_augmentation_sourc": 3, "valid": [3, 7], "learn": [3, 7], "rate": [3, 7], "previou": 3, "consid": 3, "alreai": 3, "total": [3, 5], "rather": [3, 5], "than": [3, 5], "particaular": 3, "wich": 3, "One": 3, "predefin": 3, "all": [3, 5, 6], "up": [3, 5], "you": [3, 5, 7], "complex": 3, "doe": 3, "half": 3, "gaussian": 3, "blur": 3, "random": [3, 5, 6], "sigma": 3, "rang": [3, 5], "sometim": 3, "gaussianblur": 3, "callback": 3, "fit_gener": 3, "method": [3, 4, 5], "must": [3, 5, 7], "sourc": [3, 4, 5], "string": [3, 6], "mold_input": 3, "expect": 3, "matric": 3, "molded_imag": 3, "length": [3, 5], "portion": 3, "unmold_detect": 3, "mrcnn_mask": 3, "original_image_shap": 3, "reformat": 3, "suitabl": 3, "rest": 3, "applic": 3, "after": 3, "real": 3, "float": [3, 5, 6], "num_inst": [3, 5, 6], "run": [3, 5, 7], "pipelin": 3, "potenti": 3, "dict": 3, "detect_mold": 3, "mold": 3, "alreadi": 3, "mostli": 3, "inspect": 3, "get_anchor": 3, "ancestor": 3, "check": 3, "symbol": 3, "intern": [3, 5], "were": [3, 5], "search": [3, 7], "loop": 3, "travers": 3, "find_trainable_lay": 3, "anoth": 3, "dig": 3, "through": 3, "hold": 3, "get_trainable_lay": 3, "run_graph": 3, "assum": [3, 5], "e": 3, "tupl": [3, 6], "easi": [3, 5], "track": 3, "order": [3, 5], "kei": 3, "scale": [3, 5], "attribut": 3, "put": [3, 7], "1d": [3, 5], "area": [3, 5], "factor": [3, 5], "avail": [3, 5], "came": 3, "present": 3, "parse_image_meta": 3, "pars": 3, "its": [3, 5], "compon": 3, "more": [3, 5], "parse_image_meta_graph": 3, "mold_imag": 3, "rgb": [3, 6, 7], "subtract": 3, "mean": [3, 5], "convert": [3, 5, 6], "color": [3, 5, 6], "unmold_imag": 3, "normalized_imag": 3, "trim_zeros_graph": 3, "trim_zero": [3, 5], "repres": [3, 5], "matrix": [3, 5], "non_zero": 3, "row": [3, 5, 6], "keep": [3, 5], "batch_pack_graph": 3, "num_row": 3, "norm_boxes_graph": 3, "In": [3, 5, 7], "outsid": [3, 5], "insid": [3, 5, 7], "denorm_boxes_graph": 3, "idea": 4, "snippet": 4, "fchollet": 4, "issu": 4, "2436": 4, "medium": 4, "kuza55": 4, "transpar": 4, "8b0016fd9012": 4, "avolkov1": 4, "keras_experi": 4, "blob": 4, "master": 4, "keras_exp": 4, "multigpu": 4, "training_util": 4, "py": [4, 7], "parallelmodel": 4, "subclass": 4, "standard": 4, "work": [4, 5], "copi": [4, 5], "slice": [4, 5], "send": 4, "merg": 4, "togeth": 4, "combin": [4, 5], "__getattribute__": 4, "attrnam": 4, "redirect": 4, "save": [4, 7], "inner": 4, "That": 4, "store": [4, 5, 7], "summari": 4, "arg": [4, 5], "both": [4, 5], "wrapper": [4, 5], "make_parallel": 4, "consist": [4, 5], "replica": 4, "common": 5, "coco_model_url": 5, "mask_rcnn": 5, "releas": 5, "v2": 5, "mask_rcnn_coco": 5, "h5": 5, "extract_bbox": 5, "compute_i": 5, "box_area": 5, "boxes_area": 5, "calcul": 5, "vector": 5, "boxes_count": 5, "here": [5, 7], "effici": 5, "onc": 5, "caller": 5, "duplic": 5, "compute_overlap": 5, "better": [5, 6, 7], "perform": 5, "largest": 5, "smaller": 5, "compute_overlaps_mask": 5, "masks1": 5, "masks2": 5, "non_max_suppress": 5, "threshold": [5, 6, 7], "maximum": [5, 7], "indic": 5, "kept": 5, "notic": 5, "lai": 5, "d": 5, "apply_box_delta": 5, "box_refinement_graph": 5, "transform": 5, "box_refin": 5, "class_map": 5, "want": [5, 7], "catsanddogsdataset": 5, "def": 5, "load_cats_and_dog": 5, "self": 5, "load_mask": 5, "image_refer": 5, "cocodataset": 5, "shapesdataset": 5, "add_class": 5, "class_nam": [5, 6], "add_imag": 5, "link": 5, "websit": 5, "help": 5, "look": 5, "your": [5, 7], "encount": 5, "prepar": 5, "todo": 5, "yet": 5, "handl": 5, "same": [5, 6, 7], "map_source_class_id": 5, "source_class_id": 5, "assign": 5, "coco": [5, 7], "12": 5, "23": 5, "get_source_class_id": 5, "source_image_link": 5, "url": 5, "onlin": 5, "load_imag": 5, "specifi": 5, "wai": 5, "am": 5, "bool": 5, "resize_imag": 5, "min_dim": 5, "max_dim": 5, "min_scal": 5, "aspect": 5, "ratio": 5, "unchang": 5, "dimens": 5, "ensur": 5, "longest": 5, "side": 5, "exce": 5, "least": [5, 7], "percent": 5, "requir": [5, 6, 7], "No": 5, "pad64": 5, "ignor": 5, "down": 5, "6": [5, 7], "fpn": 5, "onli": [5, 7], "insert": 5, "includ": 5, "ad": 5, "top": [5, 6], "bottom": 5, "resize_mask": 5, "minimize_mask": 5, "mini_shap": 5, "reduc": 5, "memori": 5, "back": 5, "expand_mask": 5, "inspect_data": 5, "ipynb": [5, 7], "notebook": [5, 7], "mini_mask": 5, "revers": 5, "mold_mask": 5, "unmold_mask": 5, "28x28": 5, "fit": [5, 6], "generate_anchor": 5, "feature_strid": 5, "spatial": 5, "over": [5, 6], "rel": 5, "generate_pyramid_anchor": 5, "feature_shap": 5, "associ": 5, "sort": 5, "come": 5, "larger": 5, "column": 5, "compute_match": 5, "pred_box": [5, 6], "pred_class_id": [5, 6], "pred_scor": [5, 6], "iou_threshold": [5, 6], "score_threshold": [5, 6], "predict": [5, 6], "gt_match": 5, "index": [5, 7], "pred_match": 5, "compute_ap": 5, "averag": [5, 6], "precis": [5, 6], "recal": [5, 6], "compute_ap_rang": 5, "ap": [5, 6], "95": 5, "compute_recal": 5, "how": [5, 6], "mani": 5, "found": 5, "batch_slic": 5, "graph_fn": 5, "batch_siz": 5, "split": 5, "feed": 5, "divid": 5, "download_trained_weight": 5, "coco_model_path": 5, "local": 5, "norm_box": 5, "denorm_box": 5, "output_shap": 5, "constant": 5, "cval": 5, "clip": 5, "preserve_rang": 5, "anti_alias": 5, "anti_aliasing_sigma": 5, "scikit": 5, "warn": 5, "paramet": [5, 7], "skimag": 5, "solv": 5, "problem": 5, "get_iou": 5, "epsilon": 5, "1e": 5, "05": 5, "four": 5, "upper": 5, "corner": 5, "lower": 5, "intersect": 5, "union": 5, "prevent": 5, "divis": 5, "gt_pred_list": 5, "gt_bbox": 5, "iou_tresh": 5, "len": 5, "miss": 5, "background": 5, "n1": 5, "n2": 5, "pred": 5, "get_new_fig": 5, "fn": 5, "figsiz": [5, 6], "init": 5, "graphic": 5, "configcell_text_and_color": 5, "array_df": 5, "lin": 5, "col": [5, 6], "otext": 5, "facecolor": 5, "posi": 5, "fz": 5, "fmt": 5, "show_null_valu": 5, "cell": 5, "element": 5, "dell": 5, "insert_tot": 5, "df_cm": 5, "line": [5, 6, 7], "ones": 5, "pretty_plot_confusion_matrix": 5, "annot": 5, "cmap": [5, 6], "orang": 5, "2f": 5, "11": 5, "lw": 5, "cbar": 5, "pred_val_axi": 5, "conf": 5, "layout": 5, "like": [5, 6], "matlab": 5, "datafram": 5, "panda": 5, "oranges_r": 5, "ylgnbu": 5, "blue": [5, 6, 7], "rdbu": 5, "fontsiz": 5, "linewidth": 5, "show": [5, 6], "axi": [5, 6], "instead": 5, "plot_confusion_matrix_from_data": 5, "y_test": 5, "36": 5, "plot": 5, "confus": 5, "predic": 5, "whitout": 5, "tp": 5, "fp": 5, "root_dir": 6, "display_imag": 6, "titl": 6, "interpol": 6, "hwc": 6, "random_color": 6, "bright": 6, "distinct": 6, "hsv": 6, "space": 6, "apply_mask": 6, "alpha": 6, "display_inst": 6, "figax": 6, "show_mask": 6, "show_bbox": 6, "show_capt": 6, "caption": 6, "save_fig": 6, "class": 6, "confid": [6, 7], "figur": 6, "display_differ": 6, "ax": 6, "show_box": 6, "draw_roi": 6, "refined_roi": 6, "limit": 6, "draw_box": 6, "draw": 6, "display_top_mask": 6, "few": 6, "plot_precision_recal": 6, "curv": 6, "plot_overlap": 6, "grid": 6, "refined_box": 6, "visibl": 6, "segment": [6, 7], "solid": 6, "re": 6, "promin": 6, "matplotlib": 6, "display_t": 6, "tabl": 6, "display_weight_stat": 6, "scan": 6, "stat": 6, "setup": 7, "fiji": 7, "oligodendrocyt": 7, "prerequisit": 7, "miniconda": 7, "toslr": 7, "ol_mrcnn": 7, "conda": 7, "environ": 7, "termin": 7, "yml": 7, "env": 7, "f": 7, "folder": 7, "These": 7, "feel": 7, "free": 7, "open": 7, "txt": 7, "environment": 7, "move": 7, "ol_segment": 7, "restart": 7, "account": 7, "launch": 7, "pop": 7, "preprocess": [], "report": [], "section": [], "task": 7, "achiev": 7, "choos": 7, "process": 7, "click": 7, "adjust": 7, "usag": [], "whether": 7, "edit": 7, "finish": 7, "editor": 7, "been": 7, "along": 7, "navig": 7, "delet": 7, "image_cropp": 7, "devic": 7, "cpu": 7, "minimum": 7, "elimin": 7, "abov": 7, "weights_subpath": 7, "subpath": 7, "results_nam": 7, "test_dir": 7, "num_gpu": 7, "num_img_per_gpu": 7, "parallel": 7, "we": 7, "model_pipelin": 7, "follow": 7, "gpu_count_macro": 7, "num_img_per_gpu_macro": 7, "min_confidence_macro": 7, "nms_threshold_macro": 7, "nms_multiclass_macro": 7, "gpu_count_micro": 7, "num_img_per_gpu_micro": 7, "min_confidence_micro": 7, "nms_threshold_micro": 7, "macro_model_subpath": 7, "micro_model_subpath": 7, "root": 7, "img": 7, "roi_labels_to_json": 7, "script": 7, "dir_path": 7, "function": 7, "json": 7, "format_data": 7, "test": 7, "grayscal": 7, "data_path": 7, "step": 7, "customdataset": 7, "instruct": 7, "custom_multi": 7, "modul": 7, "yourself": 7, "command": 7, "tiff": [], "info": 7, "own": 7, "analys": 7, "readabl": 7, "choic": 7, "affect": 7, "accuraci": 7, "below": 7, "give": 7, "best": 7, "recommend": 7, "hit": 7, "ok": 7, "appear": 7, "next": 7, "former": 7, "oldername_norm": 7, "still": 7, "develop": 7, "pleas": 7, "refer": 7, "userguid": 7, "job": 7, "jobnam": 7, "green": 7, "lead": 7, "bad": 7, "regardless": 7, "contrast": 7, "red": 7}, "objects": {"": [[2, 0, 0, "-", "mrcnn"]], "mrcnn": [[1, 0, 0, "-", "config"], [3, 0, 0, "-", "model"], [4, 0, 0, "-", "parallel_model"], [5, 0, 0, "-", "utils"], [6, 0, 0, "-", "visualize"]], "mrcnn.config": [[1, 1, 1, "", "Config"]], "mrcnn.config.Config": [[1, 2, 1, "", "BACKBONE"], [1, 2, 1, "", "BACKBONE_STRIDES"], [1, 2, 1, "", "BBOX_STD_DEV"], [1, 2, 1, "", "COMPUTE_BACKBONE_SHAPE"], [1, 2, 1, "", "DETECTION_MAX_INSTANCES"], [1, 2, 1, "", "DETECTION_MIN_CONFIDENCE"], [1, 2, 1, "", "DETECTION_NMS_THRESHOLD"], [1, 2, 1, "", "FPN_CLASSIF_FC_LAYERS_SIZE"], [1, 2, 1, "", "GPU_COUNT"], [1, 2, 1, "", "GRADIENT_CLIP_NORM"], [1, 2, 1, "", "IMAGES_PER_GPU"], [1, 2, 1, "", "IMAGE_CHANNEL_COUNT"], [1, 2, 1, "", "IMAGE_MAX_DIM"], [1, 2, 1, "", "IMAGE_MIN_DIM"], [1, 2, 1, "", "IMAGE_MIN_SCALE"], [1, 2, 1, "", "IMAGE_RESIZE_MODE"], [1, 2, 1, "", "LEARNING_MOMENTUM"], [1, 2, 1, "", "LEARNING_RATE"], [1, 2, 1, "", "LOSS_WEIGHTS"], [1, 2, 1, "", "MASK_POOL_SIZE"], [1, 2, 1, "", "MASK_SHAPE"], [1, 2, 1, "", "MAX_GT_INSTANCES"], [1, 2, 1, "", "MEAN_PIXEL"], [1, 2, 1, "", "MINI_MASK_SHAPE"], [1, 2, 1, "", "NAME"], [1, 2, 1, "", "NUM_CLASSES"], [1, 2, 1, "", "POOL_SIZE"], [1, 2, 1, "", "POST_NMS_ROIS_INFERENCE"], [1, 2, 1, "", "POST_NMS_ROIS_TRAINING"], [1, 2, 1, "", "PRE_NMS_LIMIT"], [1, 2, 1, "", "ROI_POSITIVE_RATIO"], [1, 2, 1, "", "RPN_ANCHOR_RATIOS"], [1, 2, 1, "", "RPN_ANCHOR_SCALES"], [1, 2, 1, "", "RPN_ANCHOR_STRIDE"], [1, 2, 1, "", "RPN_BBOX_STD_DEV"], [1, 2, 1, "", "RPN_NMS_THRESHOLD"], [1, 2, 1, "", "RPN_TRAIN_ANCHORS_PER_IMAGE"], [1, 2, 1, "", "STEPS_PER_EPOCH"], [1, 2, 1, "", "TOP_DOWN_PYRAMID_SIZE"], [1, 2, 1, "", "TRAIN_BN"], [1, 2, 1, "", "TRAIN_ROIS_PER_IMAGE"], [1, 2, 1, "", "USE_MINI_MASK"], [1, 2, 1, "", "USE_RPN_ROIS"], [1, 2, 1, "", "VALIDATION_STEPS"], [1, 2, 1, "", "WEIGHT_DECAY"], [1, 3, 1, "", "display"], [1, 3, 1, "", "to_dict"]], "mrcnn.model": [[3, 1, 1, "", "BatchNorm"], [3, 1, 1, "", "DataGenerator"], [3, 1, 1, "", "DetectionLayer"], [3, 1, 1, "", "DetectionTargetLayer"], [3, 1, 1, "", "MaskRCNN"], [3, 1, 1, "", "ProposalLayer"], [3, 1, 1, "", "PyramidROIAlign"], [3, 4, 1, "", "apply_box_deltas_graph"], [3, 4, 1, "", "batch_pack_graph"], [3, 4, 1, "", "build_detection_targets"], [3, 4, 1, "", "build_fpn_mask_graph"], [3, 4, 1, "", "build_rpn_model"], [3, 4, 1, "", "build_rpn_targets"], [3, 4, 1, "", "clip_boxes_graph"], [3, 4, 1, "", "compose_image_meta"], [3, 4, 1, "", "compute_backbone_shapes"], [3, 4, 1, "", "conv_block"], [3, 4, 1, "", "denorm_boxes_graph"], [3, 4, 1, "", "detection_targets_graph"], [3, 4, 1, "", "fpn_classifier_graph"], [3, 4, 1, "", "generate_random_rois"], [3, 4, 1, "", "identity_block"], [3, 4, 1, "", "load_image_gt"], [3, 4, 1, "", "log"], [3, 4, 1, "", "log2_graph"], [3, 4, 1, "", "mold_image"], [3, 4, 1, "", "mrcnn_bbox_loss_graph"], [3, 4, 1, "", "mrcnn_class_loss_graph"], [3, 4, 1, "", "mrcnn_mask_loss_graph"], [3, 4, 1, "", "norm_boxes_graph"], [3, 4, 1, "", "overlaps_graph"], [3, 4, 1, "", "parse_image_meta"], [3, 4, 1, "", "parse_image_meta_graph"], [3, 4, 1, "", "refine_detections_graph"], [3, 4, 1, "", "resnet_graph"], [3, 4, 1, "", "rpn_bbox_loss_graph"], [3, 4, 1, "", "rpn_class_loss_graph"], [3, 4, 1, "", "rpn_graph"], [3, 4, 1, "", "smooth_l1_loss"], [3, 4, 1, "", "trim_zeros_graph"], [3, 4, 1, "", "unmold_image"]], "mrcnn.model.BatchNorm": [[3, 3, 1, "", "call"]], "mrcnn.model.DataGenerator": [[3, 3, 1, "", "__getitem__"], [3, 3, 1, "", "__len__"]], "mrcnn.model.DetectionLayer": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compute_output_shape"], [3, 3, 1, "", "get_config"]], "mrcnn.model.DetectionTargetLayer": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compute_mask"], [3, 3, 1, "", "compute_output_shape"], [3, 3, 1, "", "get_config"]], "mrcnn.model.MaskRCNN": [[3, 3, 1, "", "ancestor"], [3, 3, 1, "", "build"], [3, 3, 1, "", "compile"], [3, 3, 1, "", "detect"], [3, 3, 1, "", "detect_molded"], [3, 3, 1, "", "find_last"], [3, 3, 1, "", "find_trainable_layer"], [3, 3, 1, "", "get_anchors"], [3, 3, 1, "", "get_imagenet_weights"], [3, 3, 1, "", "get_trainable_layers"], [3, 3, 1, "", "load_weights"], [3, 3, 1, "", "mold_inputs"], [3, 3, 1, "", "run_graph"], [3, 3, 1, "", "set_log_dir"], [3, 3, 1, "", "set_trainable"], [3, 3, 1, "", "train"], [3, 3, 1, "", "unmold_detections"]], "mrcnn.model.ProposalLayer": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compute_output_shape"], [3, 3, 1, "", "get_config"]], "mrcnn.model.PyramidROIAlign": [[3, 3, 1, "", "call"], [3, 3, 1, "", "compute_output_shape"], [3, 3, 1, "", "get_config"]], "mrcnn.parallel_model": [[4, 5, 1, "", "GPU_COUNT"], [4, 1, 1, "", "ParallelModel"]], "mrcnn.parallel_model.ParallelModel": [[4, 3, 1, "", "__getattribute__"], [4, 3, 1, "", "make_parallel"], [4, 3, 1, "", "summary"]], "mrcnn.utils": [[5, 5, 1, "", "COCO_MODEL_URL"], [5, 1, 1, "", "Dataset"], [5, 4, 1, "", "apply_box_deltas"], [5, 4, 1, "", "batch_slice"], [5, 4, 1, "", "box_refinement"], [5, 4, 1, "", "box_refinement_graph"], [5, 4, 1, "", "compute_ap"], [5, 4, 1, "", "compute_ap_range"], [5, 4, 1, "", "compute_iou"], [5, 4, 1, "", "compute_matches"], [5, 4, 1, "", "compute_overlaps"], [5, 4, 1, "", "compute_overlaps_masks"], [5, 4, 1, "", "compute_recall"], [5, 4, 1, "", "configcell_text_and_colors"], [5, 4, 1, "", "denorm_boxes"], [5, 4, 1, "", "download_trained_weights"], [5, 4, 1, "", "expand_mask"], [5, 4, 1, "", "extract_bboxes"], [5, 4, 1, "", "generate_anchors"], [5, 4, 1, "", "generate_pyramid_anchors"], [5, 4, 1, "", "get_iou"], [5, 4, 1, "", "get_new_fig"], [5, 4, 1, "", "gt_pred_lists"], [5, 4, 1, "", "insert_totals"], [5, 4, 1, "", "minimize_mask"], [5, 4, 1, "", "mold_mask"], [5, 4, 1, "", "non_max_suppression"], [5, 4, 1, "", "norm_boxes"], [5, 4, 1, "", "plot_confusion_matrix_from_data"], [5, 4, 1, "", "pretty_plot_confusion_matrix"], [5, 4, 1, "", "resize"], [5, 4, 1, "", "resize_image"], [5, 4, 1, "", "resize_mask"], [5, 4, 1, "", "trim_zeros"], [5, 4, 1, "", "unmold_mask"]], "mrcnn.utils.Dataset": [[5, 3, 1, "", "add_class"], [5, 3, 1, "", "add_image"], [5, 3, 1, "", "get_source_class_id"], [5, 6, 1, "", "image_ids"], [5, 3, 1, "", "image_reference"], [5, 3, 1, "", "load_image"], [5, 3, 1, "", "load_mask"], [5, 3, 1, "", "map_source_class_id"], [5, 3, 1, "", "prepare"], [5, 3, 1, "", "source_image_link"]], "mrcnn.visualize": [[6, 5, 1, "", "ROOT_DIR"], [6, 4, 1, "", "apply_mask"], [6, 4, 1, "", "display_differences"], [6, 4, 1, "", "display_images"], [6, 4, 1, "", "display_instances"], [6, 4, 1, "", "display_table"], [6, 4, 1, "", "display_top_masks"], [6, 4, 1, "", "display_weight_stats"], [6, 4, 1, "", "draw_box"], [6, 4, 1, "", "draw_boxes"], [6, 4, 1, "", "draw_rois"], [6, 4, 1, "", "plot_overlaps"], [6, 4, 1, "", "plot_precision_recall"], [6, 4, 1, "", "random_colors"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": 0, "mrcnn": [1, 2, 3, 4, 5, 6], "config": 1, "modul": [1, 3, 4, 5, 6], "content": [1, 3, 4, 5, 6], "class": [1, 3, 4, 5, 7], "submodul": 2, "model": [3, 7], "function": [3, 5, 6], "parallel_model": 4, "attribut": [4, 5, 6], "util": 5, "visual": 6, "introduct": 7, "instal": 7, "plugin": 7, "user": 7, "guid": 7, "python": 7, "imag": [], "crop": [], "full": [], "pipelin": [], "retrain": 7, "your": [], "own": [], "data": 7, "structur": 7, "singl": 7, "multi": 7, "indic": 7, "tabl": 7, "preprocess": 7, "analysi": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "mrcnn.config": [[1, "module-mrcnn.config"]], "Module Contents": [[1, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"]], "Classes": [[1, "classes"], [3, "classes"], [4, "classes"], [5, "classes"]], "mrcnn": [[2, "module-mrcnn"]], "Submodules": [[2, "submodules"]], "mrcnn.model": [[3, "module-mrcnn.model"]], "Functions": [[3, "functions"], [5, "functions"], [6, "functions"]], "mrcnn.parallel_model": [[4, "module-mrcnn.parallel_model"]], "Attributes": [[4, "attributes"], [5, "attributes"], [6, "attributes"]], "mrcnn.utils": [[5, "module-mrcnn.utils"]], "mrcnn.visualize": [[6, "module-mrcnn.visualize"]], "Introduction": [[7, "introduction"]], "Installation": [[7, "installation"]], "Plugin User Guide": [[7, "plugin-user-guide"]], "Preprocessing": [[7, "preprocessing"]], "Analysis": [[7, "analysis"]], "Python User Guide": [[7, "python-user-guide"]], "Data structure": [[7, "data-structure"]], "Retraining a single class model": [[7, "retraining-a-single-class-model"]], "Retraining a multi-class model": [[7, "retraining-a-multi-class-model"]], "Indices and tables": [[7, "indices-and-tables"]]}, "indexentries": {"backbone (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.BACKBONE"]], "backbone_strides (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.BACKBONE_STRIDES"]], "bbox_std_dev (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.BBOX_STD_DEV"]], "compute_backbone_shape (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.COMPUTE_BACKBONE_SHAPE"]], "config (class in mrcnn.config)": [[1, "mrcnn.config.Config"]], "detection_max_instances (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.DETECTION_MAX_INSTANCES"]], "detection_min_confidence (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.DETECTION_MIN_CONFIDENCE"]], "detection_nms_threshold (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.DETECTION_NMS_THRESHOLD"]], "fpn_classif_fc_layers_size (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.FPN_CLASSIF_FC_LAYERS_SIZE"]], "gpu_count (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.GPU_COUNT"]], "gradient_clip_norm (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.GRADIENT_CLIP_NORM"]], "images_per_gpu (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.IMAGES_PER_GPU"]], "image_channel_count (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.IMAGE_CHANNEL_COUNT"]], "image_max_dim (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.IMAGE_MAX_DIM"]], "image_min_dim (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.IMAGE_MIN_DIM"]], "image_min_scale (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.IMAGE_MIN_SCALE"]], "image_resize_mode (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.IMAGE_RESIZE_MODE"]], "learning_momentum (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.LEARNING_MOMENTUM"]], "learning_rate (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.LEARNING_RATE"]], "loss_weights (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.LOSS_WEIGHTS"]], "mask_pool_size (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.MASK_POOL_SIZE"]], "mask_shape (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.MASK_SHAPE"]], "max_gt_instances (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.MAX_GT_INSTANCES"]], "mean_pixel (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.MEAN_PIXEL"]], "mini_mask_shape (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.MINI_MASK_SHAPE"]], "name (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.NAME"]], "num_classes (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.NUM_CLASSES"]], "pool_size (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.POOL_SIZE"]], "post_nms_rois_inference (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.POST_NMS_ROIS_INFERENCE"]], "post_nms_rois_training (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.POST_NMS_ROIS_TRAINING"]], "pre_nms_limit (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.PRE_NMS_LIMIT"]], "roi_positive_ratio (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.ROI_POSITIVE_RATIO"]], "rpn_anchor_ratios (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.RPN_ANCHOR_RATIOS"]], "rpn_anchor_scales (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.RPN_ANCHOR_SCALES"]], "rpn_anchor_stride (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.RPN_ANCHOR_STRIDE"]], "rpn_bbox_std_dev (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.RPN_BBOX_STD_DEV"]], "rpn_nms_threshold (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.RPN_NMS_THRESHOLD"]], "rpn_train_anchors_per_image (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.RPN_TRAIN_ANCHORS_PER_IMAGE"]], "steps_per_epoch (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.STEPS_PER_EPOCH"]], "top_down_pyramid_size (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.TOP_DOWN_PYRAMID_SIZE"]], "train_bn (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.TRAIN_BN"]], "train_rois_per_image (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.TRAIN_ROIS_PER_IMAGE"]], "use_mini_mask (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.USE_MINI_MASK"]], "use_rpn_rois (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.USE_RPN_ROIS"]], "validation_steps (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.VALIDATION_STEPS"]], "weight_decay (mrcnn.config.config attribute)": [[1, "mrcnn.config.Config.WEIGHT_DECAY"]], "display() (mrcnn.config.config method)": [[1, "mrcnn.config.Config.display"]], "module": [[1, "module-mrcnn.config"], [2, "module-mrcnn"], [3, "module-mrcnn.model"], [4, "module-mrcnn.parallel_model"], [5, "module-mrcnn.utils"], [6, "module-mrcnn.visualize"]], "mrcnn.config": [[1, "module-mrcnn.config"]], "to_dict() (mrcnn.config.config method)": [[1, "mrcnn.config.Config.to_dict"]], "mrcnn": [[2, "module-mrcnn"]], "batchnorm (class in mrcnn.model)": [[3, "mrcnn.model.BatchNorm"]], "datagenerator (class in mrcnn.model)": [[3, "mrcnn.model.DataGenerator"]], "detectionlayer (class in mrcnn.model)": [[3, "mrcnn.model.DetectionLayer"]], "detectiontargetlayer (class in mrcnn.model)": [[3, "mrcnn.model.DetectionTargetLayer"]], "maskrcnn (class in mrcnn.model)": [[3, "mrcnn.model.MaskRCNN"]], "proposallayer (class in mrcnn.model)": [[3, "mrcnn.model.ProposalLayer"]], "pyramidroialign (class in mrcnn.model)": [[3, "mrcnn.model.PyramidROIAlign"]], "__getitem__() (mrcnn.model.datagenerator method)": [[3, "mrcnn.model.DataGenerator.__getitem__"]], "__len__() (mrcnn.model.datagenerator method)": [[3, "mrcnn.model.DataGenerator.__len__"]], "ancestor() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.ancestor"]], "apply_box_deltas_graph() (in module mrcnn.model)": [[3, "mrcnn.model.apply_box_deltas_graph"]], "batch_pack_graph() (in module mrcnn.model)": [[3, "mrcnn.model.batch_pack_graph"]], "build() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.build"]], "build_detection_targets() (in module mrcnn.model)": [[3, "mrcnn.model.build_detection_targets"]], "build_fpn_mask_graph() (in module mrcnn.model)": [[3, "mrcnn.model.build_fpn_mask_graph"]], "build_rpn_model() (in module mrcnn.model)": [[3, "mrcnn.model.build_rpn_model"]], "build_rpn_targets() (in module mrcnn.model)": [[3, "mrcnn.model.build_rpn_targets"]], "call() (mrcnn.model.batchnorm method)": [[3, "mrcnn.model.BatchNorm.call"]], "call() (mrcnn.model.detectionlayer method)": [[3, "mrcnn.model.DetectionLayer.call"]], "call() (mrcnn.model.detectiontargetlayer method)": [[3, "mrcnn.model.DetectionTargetLayer.call"]], "call() (mrcnn.model.proposallayer method)": [[3, "mrcnn.model.ProposalLayer.call"]], "call() (mrcnn.model.pyramidroialign method)": [[3, "mrcnn.model.PyramidROIAlign.call"]], "clip_boxes_graph() (in module mrcnn.model)": [[3, "mrcnn.model.clip_boxes_graph"]], "compile() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.compile"]], "compose_image_meta() (in module mrcnn.model)": [[3, "mrcnn.model.compose_image_meta"]], "compute_backbone_shapes() (in module mrcnn.model)": [[3, "mrcnn.model.compute_backbone_shapes"]], "compute_mask() (mrcnn.model.detectiontargetlayer method)": [[3, "mrcnn.model.DetectionTargetLayer.compute_mask"]], "compute_output_shape() (mrcnn.model.detectionlayer method)": [[3, "mrcnn.model.DetectionLayer.compute_output_shape"]], "compute_output_shape() (mrcnn.model.detectiontargetlayer method)": [[3, "mrcnn.model.DetectionTargetLayer.compute_output_shape"]], "compute_output_shape() (mrcnn.model.proposallayer method)": [[3, "mrcnn.model.ProposalLayer.compute_output_shape"]], "compute_output_shape() (mrcnn.model.pyramidroialign method)": [[3, "mrcnn.model.PyramidROIAlign.compute_output_shape"]], "conv_block() (in module mrcnn.model)": [[3, "mrcnn.model.conv_block"]], "denorm_boxes_graph() (in module mrcnn.model)": [[3, "mrcnn.model.denorm_boxes_graph"]], "detect() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.detect"]], "detect_molded() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.detect_molded"]], "detection_targets_graph() (in module mrcnn.model)": [[3, "mrcnn.model.detection_targets_graph"]], "find_last() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.find_last"]], "find_trainable_layer() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.find_trainable_layer"]], "fpn_classifier_graph() (in module mrcnn.model)": [[3, "mrcnn.model.fpn_classifier_graph"]], "generate_random_rois() (in module mrcnn.model)": [[3, "mrcnn.model.generate_random_rois"]], "get_anchors() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.get_anchors"]], "get_config() (mrcnn.model.detectionlayer method)": [[3, "mrcnn.model.DetectionLayer.get_config"]], "get_config() (mrcnn.model.detectiontargetlayer method)": [[3, "mrcnn.model.DetectionTargetLayer.get_config"]], "get_config() (mrcnn.model.proposallayer method)": [[3, "mrcnn.model.ProposalLayer.get_config"]], "get_config() (mrcnn.model.pyramidroialign method)": [[3, "mrcnn.model.PyramidROIAlign.get_config"]], "get_imagenet_weights() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.get_imagenet_weights"]], "get_trainable_layers() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.get_trainable_layers"]], "identity_block() (in module mrcnn.model)": [[3, "mrcnn.model.identity_block"]], "load_image_gt() (in module mrcnn.model)": [[3, "mrcnn.model.load_image_gt"]], "load_weights() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.load_weights"]], "log() (in module mrcnn.model)": [[3, "mrcnn.model.log"]], "log2_graph() (in module mrcnn.model)": [[3, "mrcnn.model.log2_graph"]], "mold_image() (in module mrcnn.model)": [[3, "mrcnn.model.mold_image"]], "mold_inputs() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.mold_inputs"]], "mrcnn.model": [[3, "module-mrcnn.model"]], "mrcnn_bbox_loss_graph() (in module mrcnn.model)": [[3, "mrcnn.model.mrcnn_bbox_loss_graph"]], "mrcnn_class_loss_graph() (in module mrcnn.model)": [[3, "mrcnn.model.mrcnn_class_loss_graph"]], "mrcnn_mask_loss_graph() (in module mrcnn.model)": [[3, "mrcnn.model.mrcnn_mask_loss_graph"]], "norm_boxes_graph() (in module mrcnn.model)": [[3, "mrcnn.model.norm_boxes_graph"]], "overlaps_graph() (in module mrcnn.model)": [[3, "mrcnn.model.overlaps_graph"]], "parse_image_meta() (in module mrcnn.model)": [[3, "mrcnn.model.parse_image_meta"]], "parse_image_meta_graph() (in module mrcnn.model)": [[3, "mrcnn.model.parse_image_meta_graph"]], "refine_detections_graph() (in module mrcnn.model)": [[3, "mrcnn.model.refine_detections_graph"]], "resnet_graph() (in module mrcnn.model)": [[3, "mrcnn.model.resnet_graph"]], "rpn_bbox_loss_graph() (in module mrcnn.model)": [[3, "mrcnn.model.rpn_bbox_loss_graph"]], "rpn_class_loss_graph() (in module mrcnn.model)": [[3, "mrcnn.model.rpn_class_loss_graph"]], "rpn_graph() (in module mrcnn.model)": [[3, "mrcnn.model.rpn_graph"]], "run_graph() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.run_graph"]], "set_log_dir() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.set_log_dir"]], "set_trainable() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.set_trainable"]], "smooth_l1_loss() (in module mrcnn.model)": [[3, "mrcnn.model.smooth_l1_loss"]], "train() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.train"]], "trim_zeros_graph() (in module mrcnn.model)": [[3, "mrcnn.model.trim_zeros_graph"]], "unmold_detections() (mrcnn.model.maskrcnn method)": [[3, "mrcnn.model.MaskRCNN.unmold_detections"]], "unmold_image() (in module mrcnn.model)": [[3, "mrcnn.model.unmold_image"]], "gpu_count (in module mrcnn.parallel_model)": [[4, "mrcnn.parallel_model.GPU_COUNT"]], "parallelmodel (class in mrcnn.parallel_model)": [[4, "mrcnn.parallel_model.ParallelModel"]], "__getattribute__() (mrcnn.parallel_model.parallelmodel method)": [[4, "mrcnn.parallel_model.ParallelModel.__getattribute__"]], "make_parallel() (mrcnn.parallel_model.parallelmodel method)": [[4, "mrcnn.parallel_model.ParallelModel.make_parallel"]], "mrcnn.parallel_model": [[4, "module-mrcnn.parallel_model"]], "summary() (mrcnn.parallel_model.parallelmodel method)": [[4, "mrcnn.parallel_model.ParallelModel.summary"]], "coco_model_url (in module mrcnn.utils)": [[5, "mrcnn.utils.COCO_MODEL_URL"]], "dataset (class in mrcnn.utils)": [[5, "mrcnn.utils.Dataset"]], "add_class() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.add_class"]], "add_image() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.add_image"]], "apply_box_deltas() (in module mrcnn.utils)": [[5, "mrcnn.utils.apply_box_deltas"]], "batch_slice() (in module mrcnn.utils)": [[5, "mrcnn.utils.batch_slice"]], "box_refinement() (in module mrcnn.utils)": [[5, "mrcnn.utils.box_refinement"]], "box_refinement_graph() (in module mrcnn.utils)": [[5, "mrcnn.utils.box_refinement_graph"]], "compute_ap() (in module mrcnn.utils)": [[5, "mrcnn.utils.compute_ap"]], "compute_ap_range() (in module mrcnn.utils)": [[5, "mrcnn.utils.compute_ap_range"]], "compute_iou() (in module mrcnn.utils)": [[5, "mrcnn.utils.compute_iou"]], "compute_matches() (in module mrcnn.utils)": [[5, "mrcnn.utils.compute_matches"]], "compute_overlaps() (in module mrcnn.utils)": [[5, "mrcnn.utils.compute_overlaps"]], "compute_overlaps_masks() (in module mrcnn.utils)": [[5, "mrcnn.utils.compute_overlaps_masks"]], "compute_recall() (in module mrcnn.utils)": [[5, "mrcnn.utils.compute_recall"]], "configcell_text_and_colors() (in module mrcnn.utils)": [[5, "mrcnn.utils.configcell_text_and_colors"]], "denorm_boxes() (in module mrcnn.utils)": [[5, "mrcnn.utils.denorm_boxes"]], "download_trained_weights() (in module mrcnn.utils)": [[5, "mrcnn.utils.download_trained_weights"]], "expand_mask() (in module mrcnn.utils)": [[5, "mrcnn.utils.expand_mask"]], "extract_bboxes() (in module mrcnn.utils)": [[5, "mrcnn.utils.extract_bboxes"]], "generate_anchors() (in module mrcnn.utils)": [[5, "mrcnn.utils.generate_anchors"]], "generate_pyramid_anchors() (in module mrcnn.utils)": [[5, "mrcnn.utils.generate_pyramid_anchors"]], "get_iou() (in module mrcnn.utils)": [[5, "mrcnn.utils.get_iou"]], "get_new_fig() (in module mrcnn.utils)": [[5, "mrcnn.utils.get_new_fig"]], "get_source_class_id() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.get_source_class_id"]], "gt_pred_lists() (in module mrcnn.utils)": [[5, "mrcnn.utils.gt_pred_lists"]], "image_ids (mrcnn.utils.dataset property)": [[5, "mrcnn.utils.Dataset.image_ids"]], "image_reference() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.image_reference"]], "insert_totals() (in module mrcnn.utils)": [[5, "mrcnn.utils.insert_totals"]], "load_image() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.load_image"]], "load_mask() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.load_mask"]], "map_source_class_id() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.map_source_class_id"]], "minimize_mask() (in module mrcnn.utils)": [[5, "mrcnn.utils.minimize_mask"]], "mold_mask() (in module mrcnn.utils)": [[5, "mrcnn.utils.mold_mask"]], "mrcnn.utils": [[5, "module-mrcnn.utils"]], "non_max_suppression() (in module mrcnn.utils)": [[5, "mrcnn.utils.non_max_suppression"]], "norm_boxes() (in module mrcnn.utils)": [[5, "mrcnn.utils.norm_boxes"]], "plot_confusion_matrix_from_data() (in module mrcnn.utils)": [[5, "mrcnn.utils.plot_confusion_matrix_from_data"]], "prepare() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.prepare"]], "pretty_plot_confusion_matrix() (in module mrcnn.utils)": [[5, "mrcnn.utils.pretty_plot_confusion_matrix"]], "resize() (in module mrcnn.utils)": [[5, "mrcnn.utils.resize"]], "resize_image() (in module mrcnn.utils)": [[5, "mrcnn.utils.resize_image"]], "resize_mask() (in module mrcnn.utils)": [[5, "mrcnn.utils.resize_mask"]], "source_image_link() (mrcnn.utils.dataset method)": [[5, "mrcnn.utils.Dataset.source_image_link"]], "trim_zeros() (in module mrcnn.utils)": [[5, "mrcnn.utils.trim_zeros"]], "unmold_mask() (in module mrcnn.utils)": [[5, "mrcnn.utils.unmold_mask"]], "root_dir (in module mrcnn.visualize)": [[6, "mrcnn.visualize.ROOT_DIR"]], "apply_mask() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.apply_mask"]], "display_differences() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.display_differences"]], "display_images() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.display_images"]], "display_instances() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.display_instances"]], "display_table() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.display_table"]], "display_top_masks() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.display_top_masks"]], "display_weight_stats() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.display_weight_stats"]], "draw_box() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.draw_box"]], "draw_boxes() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.draw_boxes"]], "draw_rois() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.draw_rois"]], "mrcnn.visualize": [[6, "module-mrcnn.visualize"]], "plot_overlaps() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.plot_overlaps"]], "plot_precision_recall() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.plot_precision_recall"]], "random_colors() (in module mrcnn.visualize)": [[6, "mrcnn.visualize.random_colors"]]}})